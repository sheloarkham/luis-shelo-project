# Servidor Local para Luis Shelo Project - Versi√≥n Mejorada
# Este script SIEMPRE inicia desde la ubicaci√≥n correcta

param()

# Limpiar pantalla
Clear-Host

# Forzar cambio al directorio del script
$ScriptDirectory = Split-Path -Parent $MyInvocation.MyCommand.Path
Set-Location -Path $ScriptDirectory -ErrorAction Stop

Write-Host "================================" -ForegroundColor Cyan
Write-Host "   SERVIDOR LUIS SHELO PROJECT" -ForegroundColor Cyan  
Write-Host "================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "üìÅ Directorio: $(Get-Location)" -ForegroundColor White
Write-Host "üåê URL: http://localhost:8000" -ForegroundColor Green
Write-Host ""
Write-Host "‚èπÔ∏è  Para detener: Ctrl+C" -ForegroundColor Yellow
Write-Host "================================" -ForegroundColor Cyan
Write-Host ""

# Funci√≥n de verificaci√≥n completa
function Test-ProjectStructure {
    $errors = @()
    
    if (-not (Test-Path "shared-navbar.js")) {
        $errors += "‚ùå shared-navbar.js no encontrado"
    }
    
    if (-not (Test-Path "shared-styles.css")) {
        $errors += "‚ùå shared-styles.css no encontrado"
    }
    
    $folders = @("Presupuestos", "Proyecto", "Ocio", "Home", "Yeni üíû")
    foreach ($folder in $folders) {
        if (-not (Test-Path $folder)) {
            $errors += "‚ùå Carpeta '$folder' no encontrada"
        }
    }
    
    if ($errors.Count -gt 0) {
        Write-Host "üö® ERRORES DETECTADOS:" -ForegroundColor Red
        $errors | ForEach-Object { Write-Host "   $_" -ForegroundColor Red }
        Write-Host ""
        Write-Host "üìÇ Contenido actual:" -ForegroundColor Yellow
        Get-ChildItem | ForEach-Object { Write-Host "   $($_.Name)" -ForegroundColor Gray }
        Write-Host ""
        Write-Host "üí° Ejecute desde: C:\Users\Asus\Documents\Mio\Pag\luis-shelo-project" -ForegroundColor Yellow
        return $false
    }
    
    return $true
}

# Verificar estructura del proyecto
if (-not (Test-ProjectStructure)) {
    Read-Host "Presiona Enter para salir"
    exit 1
}

Write-Host "‚úÖ Verificaci√≥n completada" -ForegroundColor Green
Write-Host "‚úÖ Estructura del proyecto correcta" -ForegroundColor Green
Write-Host ""

# Abrir navegador
try {
    Start-Process "http://localhost:8000" -ErrorAction Stop
    Write-Host "üåê Navegador abierto autom√°ticamente" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è  Navegador no pudo abrirse autom√°ticamente" -ForegroundColor Yellow
    Write-Host "   Abra manualmente: http://localhost:8000" -ForegroundColor Gray
}

Write-Host ""
Write-Host "üöÄ Iniciando servidor Python..." -ForegroundColor Cyan
Write-Host ""

# Iniciar servidor
try {
    & python -m http.server 8000
} catch {
    Write-Host ""
    Write-Host "‚ùå Error al iniciar servidor" -ForegroundColor Red
    Write-Host "üí° Verifique que Python est√© instalado" -ForegroundColor Yellow
    Read-Host "Presiona Enter para salir"
    exit 1
}

Write-Host ""
Write-Host "üõë Servidor detenido" -ForegroundColor Yellow
Read-Host "Presiona Enter para salir"